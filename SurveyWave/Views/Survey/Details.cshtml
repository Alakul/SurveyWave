@using System.Security.Claims;
@using SurveyWave.Models;
@model SurveyViewModel;
@{
    ViewData["Title"] = "Ankieta";
}


<div>
    <partial name="Templates/_Alert" model="@TempData["Alert"]?.ToString()"/>

    <div class="d-flex justify-content-between">
        <div class="mb-3">
            <h2 name="surveyTitle" type="text">@Model.Survey.Title</h2>
            <p>@Model.Survey.Description</p>
        </div>
        @if (Model.Survey.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier)){
            <div>
                <a class="text-decoration-none btn btn-primary" asp-route-id="@Model.Survey.Id" asp-controller="Response" asp-action="Details">Wyświetl wyniki</a>
            </div>
        }
    </div>

    @if (@Model.Survey.Status == "C"){
        <p>Ankieta zamknięta</p>
    }
    else {
        if (ViewBag.Filled == true){
            <p>Dziękujemy za wypełnienie ankiety!</p>
        }
        else if (User.Identity.IsAuthenticated == false){
            <p>Aby móc wziąć udział w ankiecie - <a asp-area="Identity" asp-page="/Account/Login" class="text-decoration-none">Zaloguj się</a>.</p>
        }
        else {
            <form id="response" asp-route-id="@Model.Survey.Id" asp-controller="Response" asp-action="Create" method="post">
                <ul id="questions" class="list-group list-group-flush">
                    @for (int i = 0; i < Model.Questions.Count(); i++)
                    {
                        <li class="list-group-item">
                            <h4>@(i+1). @Model.Questions[i].Text</h4>
                            <div class="form-check">
                                @for (int j = 0; j < Model.Questions[i].Answers.Count(); j++)
                                {
                                    if (Model.Questions[i].Type == "Radio"){
                                        <input name="group_@i" class="form-check-input" type="radio" value="@Model.Questions[i].Answers[j].Id"/>  
                                        <label class="form-check-label">@Model.Questions[i].Answers[j].Text</label><br>
                                    }
                                    else if (Model.Questions[i].Type == "Checkbox"){
                                        <input name="group_@i" class="form-check-input" type="checkbox" value="@Model.Questions[i].Answers[j].Id">
                                        <label class="form-check-label">@Model.Questions[i].Answers[j].Text</label><br>
                                    }
                                }
                            </div>
                            <div id="errorText_@i"></div>
                        </li>
                    }
                    <input name="questions" value="@Model.Questions.Count()" hidden/>
                </ul>
                @if (Model.Survey.UserId != User.FindFirstValue(ClaimTypes.NameIdentifier)){
                    <button class="btn btn-primary mt-4" type="submit">Zapisz podejście</button>
                }  
            </form>      
        }  
    }
</div>

@section Scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script>
        $(window).on("load", function () {
            $.validator.messages.required = 'Proszę zaznaczyć opcję.';

            $('#response').validate({
                errorElement: 'small',
                errorClass: 'questionSpan text-danger field-validation-valid',
                errorPlacement: function(error, element) {
                    var name = element.attr("name");
                    var index = name.substring(name.indexOf('_') + 1, name.length);

                    error.insertAfter($("#errorText_"+index));
                }
            });

            var questions = $("#questions li").length;
            for (var i = 0; i < questions; i++) {
                $('[name="group_' + i + '"]').rules(
                        'add', {
                        required: true,
                    }
                );
            }
        });
    </script>
}
